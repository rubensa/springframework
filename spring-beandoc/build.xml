<?xml version="1.0" encoding="UTF-8"?>

<!--
  Build file for the beandoc tool.  Now just for building manual until I can make
  maven do it.

  This script requires a "lib" directory containing the necessary third party JAR files.
  See project.properties for the definitions of the properties used in this file.

  @author Darren Davison
  @since 1.0  
-->

<project name="spring-beandoc" default="all" basedir=".">

    <property file="build.properties"/>
    <property file="project.properties"/>


    <path id="all-libs">
        <fileset dir="${lib.dir}">
            <include name="**/*.jar"/>
        </fileset>
    </path>
  
  
    <target name="all" description="Build HTML and PDF manual" depends="dochtml,docpdf"/>
  


    <!--
        Clean all build products
    -->
    <target name="clean" description="Delete documentation">
        <delete quiet="true" dir="${target.refdocs.pdf.dir}"/>
        <delete quiet="true" dir="${target.refdocs.html.dir}"/>
    </target>
    


    <target name="checkdocbuild" description="Ensure docbook libs are available">
		<fail message="XSLT supporting lib not installed. Please see ${refdocs.src.dir}/readme.txt for instructions.">
			<condition>
				<not>
					<available file="${docbook.dir}/lib"/>
				</not>
			</condition>
		</fail>

		<mkdir dir="${target.refdocs.dir}/images/admons"/>
        <copy todir="${target.refdocs.dir}/images/admons">
            <fileset dir="${refdocs.src.dir}/images/admons">
                <include name="**/*"/>
            </fileset>
        </copy>
	</target>
	
	
	
	<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
         target: docpdf
         depends: 
         notes: 
         ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
    <target name="docpdf" 
    	depends="checkdocbuild" description="Compile reference documentation to pdf">
        <mkdir dir="${target.refdocs.pdf.dir}"/>
        <mkdir dir="${target.refdocs.pdf.dir}/images"/>

        <copy todir="${target.refdocs.pdf.dir}/images">
            <fileset dir="${refdocs.src.dir}/images">
				<include name="*.gif"/>
				<include name="*.svg"/>
				<include name="*.jpg"/>
				<include name="*.png"/>
            </fileset>
        </copy>

        <java failonerror="yes" classname="com.icl.saxon.StyleSheet" fork="true" dir="${refdocs.src.dir}">
            <classpath>
                <fileset dir="${docbook.dir}/lib">
                    <include name="**/*.jar"/>
                </fileset>
            </classpath>
            <arg value="-o"/>
            <arg value="${target.refdocs.pdf.dir}/docbook_fop.tmp"/>
            <arg value="${refdocs.src.dir}/index.xml"/>
            <arg value="${refdocs.src.dir}/styles/fopdf.xsl"/>
        </java>

        <java classname="org.apache.fop.apps.Fop" fork="true" dir="${refdocs.src.dir}">
            <classpath>
                <fileset dir="${docbook.dir}/lib">
                    <include name="**/*.jar"/>
                </fileset>
            </classpath>
            <arg value="${target.refdocs.pdf.dir}/docbook_fop.tmp"/>
            <arg value="${target.refdocs.pdf.dir}/spring-beandoc.pdf"/>
        </java>

        <delete file="${target.refdocs.pdf.dir}/docbook_fop.tmp"/>
        <delete dir="${target.refdocs.pdf.dir}/images"/>
    </target>


    <!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
         target: dochtml
         depends: 
         notes: 
         ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
    <target name="dochtml" 
    	depends="checkdocbuild" description="Compile reference documentation to chunked html">
        <mkdir dir="${target.refdocs.html.dir}"/>
        <mkdir dir="${target.refdocs.html.dir}/styles"/>
        
        <copy todir="${target.refdocs.html.dir}/images">
            <fileset dir="${refdocs.src.dir}/images">
				<include name="*.gif"/>
				<include name="*.svg"/>
				<include name="*.jpg"/>
				<include name="*.png"/>
            </fileset>
        </copy>
        
        <copy todir="${target.refdocs.html.dir}/styles">
            <fileset dir="${refdocs.src.dir}/styles">
                <include name="*.css"/>
            </fileset>
        </copy>

        <java classname="com.icl.saxon.StyleSheet" fork="true" dir="${target.refdocs.html.dir}">
            <classpath>
                <fileset dir="${docbook.dir}/lib">
                    <include name="**/*.jar"/>
                </fileset>
            </classpath>
            <arg value="${refdocs.src.dir}/index.xml"/>
            <arg value="${refdocs.src.dir}/styles/html_chunk.xsl"/>
        </java>
    </target>
    
</project>
