#
# Ant properties for building beandoc
#
# specify local properties in a build.properties file in the same directory
# as this file.  Values in this file will be overriden by any values with the 
# same name in the user-created build.properties file.
#
# Nov 2004
#

project.title=Spring Beandoc
project.name=spring-beandoc
project.version=0.5

# Compile with debug code
debug=on

# Library directory within project. Where third party jars reside.
lib.dir=${basedir}/lib

# Source directory under the current root
src.dir=${basedir}/src

# Test directory under the current root
test.dir=${basedir}/test

# All artifacts produced by the build go somewhere underneath the target dir
target.dir=${basedir}/target

# Directory for documentation 
target.javadocs.dir=${target.dir}/docs/apidoc

# refdoc.  In order to build, populate ${docbook.dir} (not maintained in CVS due to size)
docbook.dir=${basedir}/docs/DocBook
refdocs.src.dir=${basedir}/docs/src
target.refdocs.dir=${target.dir}/docs
target.refdocs.pdf.dir=${target.refdocs.dir}/pdf
target.refdocs.html.dir=${target.refdocs.dir}/html

# Main source tree will be compiled into this directory tree
target.classes.dir=${target.dir}/classes

# Test tree will be compiled into this directory tree
target.testclasses.dir=${target.dir}/test-classes

# Wildcards to be matched by JUnit tests
# Convention is that our JUnit test classes have names like XXXXTestSuite or XXXTests
test.includes=**/*TestSuite.class **/*Tests.class

# Wildcards to exclude among JUnit tests
test.excludes=**/Abstract*

# Directory where JUnit test reports are written
target.junit.reports.dir=${target.dir}/test-reports

# Directory where JUnit test summary is written
target.junit.summary.dir=${target.dir}/test-summary

# Directory we generate distribution units such as jars and zips to
target.dist.dir=${target.dir}/dist
