<?xml version="1.0"?>

<project name="spring-beandoc-sample" basedir="." default="beandoc">

    <property name="lib.dir" value="../target/dist" />
    
    <!-- load the beandoc props just to get the output dir so we can clean it -->
    <property file="${basedir}/beandoc.properties" />

    <path id="main-classpath">
        <fileset dir="${lib.dir}">
            <include name="**/*.jar"/>
        </fileset>
        <dirset dir="${basedir}"/>
    </path>

    <target name="init">
        <taskdef name="beandoc" classname="org.springframework.beandoc.client.AntTask">
            <classpath refid="main-classpath"/>
        </taskdef>
        <mkdir dir="${output.dir}" />
    </target>

    <!-- clean the output dir and regen beandocs based on props file -->
    <target name="beandoc" depends="init">
    	
        <delete>
            <fileset dir="${output.dir}" includes="**/*" />
        </delete>
        
        <!--
        	example overriding any input and output locations that may be defined in the
        	beandoc.properties file.  Input files are specified as on or more nested
        	filesets to the beandoc task
        -->
        <beandoc  
            outputDir="../target/sample-output"
            beandocProps="${basedir}/beandoc.properties">
        	<fileset dir="${basedir}/jpetstore">
        		<include name="*.xml"/>
        	</fileset>
        </beandoc>
        
        <!--
        	in this example input and output locations must be defined in the
        	beandoc.properties file
        -->
    	<!--
        <beandoc beandocProps="${basedir}/beandoc.properties"/>
        -->
        
        <!--
        	alternative task specifying a new context file for complete control
        	over the beandoc operation.  If all you want to do is specify different XSLT templates
        	then you can specify them in the beandoc.properties file - see the sample one for
        	information.
        -->
        <!--
        <beandoc 
            beandocContext="${basedir}/alternative-beandoc.xml" 
            outputDir="/some/other/outputdir/html/">
        	<fileset dir="${basedir}/jpetstore">
        		<include name="*.xml"/>
        	</fileset>
        </beandoc>
        -->
    </target>

</project>
