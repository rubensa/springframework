<?xml version="1.0"?>
<!--
  =======================================================================
  A master build file for creating a release of Spring Web Flow
  =======================================================================
-->
<project name="build-spring-ws" default="release">

  <!-- Load local and user build preferences -->
  <property file="build.properties"/>
  <property file="project.properties"/>
  <property file="${user.home}/build.properties"/>
  
  <path id="modules">
    <pathelement location="../spring-oxm"/>
    <pathelement location="../spring-ws-core"/>
    <pathelement location="../spring-ws-samples/airline"/>
  </path>

  <!-- simplistic pattern for zipping up sources -->
  <selector id="project.source.zip.includes">
    <and>
      <or>
        <filename name="build-spring-ws/**"/>
        <filename name="common-build/**"/>
        <filename name="repository/**"/>
        <filename name="spring-ws/**"/>
      </or>
      <and>
        <filename name="*/target/**" negate="true"/>
        <filename name="*/build.properties" negate="true"/>
        <filename name="*/lib/**" negate="true"/>
      </and>
      <and>
        <filename name="*/*/target/**" negate="true"/>
        <filename name="*/*/build.properties" negate="true"/>
        <filename name="*/*/lib/**" negate="true"/>
      </and>
    </and>  
  </selector>
 
  <!--
        targets:  displays all targets suitable for developer use
  -->
  <target name="targets">
    <echo>

    Master build for Spring-WS jars.

    Please execute
      build -projecthelp

    to see a list of all relevant targets.
    The default target is 'release'
    </echo>
  </target>
  
  <!--
        init:  initializes some common settings
  -->
  <target name="init" unless="init.done" depends="init.pre, init.post">
  </target>

  <target name="init.pre" >

    <tstamp>
    	<format property="build.timestamp" pattern="yyyyMMddHHmmss"/>
    </tstamp>
    <tstamp>
      <format property="TSTAMPCOL" pattern="hh:mm"/>
    </tstamp>

  	<!-- default the release version (used in release archive zips) to the current timestamp -->
    <property name="release.version" value="${build.timestamp}"/>

    <!-- root of build hierarchy -->
    <property name="target.dir" value="${basedir}/target"/>

    <!-- directory for release zips -->
    <property name="target.release.dir" value="${target.dir}/release"/>
  
    <!-- directory for release zips -->
    <property name="release.bin.zip"
	          value="spring-ws-bin-${release.version}.zip"/>
    <property name="release.bin.deps.zip"
	          value="spring-ws-bin-with-dependencies-${release.version}.zip"/>
    <property name="release.buildable.zip"
	          value="spring-ws-buildable-${release.version}.zip"/>

    <property name="zip.toplevel.dir" value="spring-ws-${release.version}"/>

    <echo message='user.dir = "${user.dir}"' />
    <echo message='ant.file = "${ant.file}"' />
    <echo message='ant.java.version = "${ant.java.version}"' />
    <echo message='release.version = "${release.version}"' />

  </target>
  
  <target name="init.post" >
    <property name="projects" value="modules"/>

    <property name="init.done" value="true"/>
  </target>
  
  <target name="clean" depends="init"
          description="Cleans all build output files from all projects">
    <echo>projects=${projects}</echo>
	<subant target="clean" inheritall="false">
	  <buildpath refid="${projects}"/>
    </subant>
  </target>

  <target name="clean-all" depends="init"
          description="Cleans all build output files from all projects, and also retrieved libs">
    <echo>projects=${projects}</echo>
	<subant target="clean-all" inheritall="false">
	  <buildpath refid="${projects}"/>
    </subant>
  </target>
  
  <target name="publish" depends="init"
          description="Calls publish targets on each project">
    <echo>projects=${projects}</echo>
	<subant target="publish" inheritall="false">
	  <buildpath refid="${projects}"/>
    </subant>
  </target>

  <target name="dist" depends="init"
          description="Calls dist targets on each project">
    <echo>projects=${projects}</echo>
	<subant target="dist" inheritall="false">
	  <buildpath refid="${projects}"/>
    </subant>
  </target>
  
  <target name="tests" depends="init"
          description="Calls test targets on each project">
    <echo>projects=${projects}</echo>
	<subant target="tests" inheritall="false">
	  <buildpath refid="${projects}"/>
    </subant>
  </target>

  <target name="javadoc" depends="init"
          description="Calls javadoc targets on each project">
    <echo>projects=${projects}</echo>
	<subant target="javadoc" inheritall="false">
	  <buildpath refid="${projects}"/>
    </subant>
  </target>

  <target name="release"
          depends="dist, javadoc, gen-release-bins, gen-release-bins-with-deps, gen-buildable-zip"
          description="Generate release zips">
  </target>

  <target name="gen-release-bins" depends="init"
          description="Generate bin zips/tarballs">

    <mkdir dir="${target.release.dir}"/>
    <delete file="${target.release.dir}/${release.bin.zip}"/>

    <zip zipfile="${target.release.dir}/${release.bin.zip}">
	  <zipfileset dir="../spring-ws/core/target/dist/jars" prefix="${zip.toplevel.dir}/dist"/>
	  <zipfileset dir="../spring-ws/core/target/dist/ivys" prefix="${zip.toplevel.dir}/dist/ivys"/>
	  <zipfileset dir="../spring-ws/core/target/javadocs" prefix="${zip.toplevel.dir}/doc/api/core"/>
	  <zipfileset dir="../spring-ws/oxm/target/dist/jars" prefix="${zip.toplevel.dir}/dist"/>
	  <zipfileset dir="../spring-ws/oxm/target/dist/ivys" prefix="${zip.toplevel.dir}/dist/ivys"/>
	  <zipfileset dir="../spring-ws/oxm/target/javadocs" prefix="${zip.toplevel.dir}/doc/api/oxm"/>
    </zip>
  </target>

  <target name="gen-release-bins-with-deps" depends="init"
          description="Generate bin zips/tarballs with all dependencies">

    <mkdir dir="${target.release.dir}"/>
    <delete file="${target.release.dir}/${release.bin.deps.zip}"/>

    <zip zipfile="${target.release.dir}/${release.bin.deps.zip}">
	  <zipfileset dir="../spring-ws/core/target/dist/jars" prefix="${zip.toplevel.dir}/dist"/>
	  <zipfileset dir="../spring-ws/core/target/dist/ivys" prefix="${zip.toplevel.dir}/dist/ivys"/>
	  <zipfileset dir="../spring-ws/core/target/javadocs" prefix="${zip.toplevel.dir}/doc/api/core"/>
	  <zipfileset dir="../spring-ws/core/lib/global" prefix="${zip.toplevel.dir}/lib"/>
	  <zipfileset dir="../spring-ws/oxm/target/dist/jars" prefix="${zip.toplevel.dir}/dist"/>
	  <zipfileset dir="../spring-ws/oxm/target/dist/ivys" prefix="${zip.toplevel.dir}/dist/ivys"/>
	  <zipfileset dir="../spring-ws/oxm/target/javadocs" prefix="${zip.toplevel.dir}/doc/api/oxm"/>
	  <zipfileset dir="../spring-ws/oxm/lib/global" prefix="${zip.toplevel.dir}/lib"/>
	</zip>
  </target>
  
  <target name="gen-buildable-zip" depends="init"
          description="Generate archive with buildable sources">

    <mkdir dir="${target.release.dir}"/>
    <delete file="${target.release.dir}/${release.buildable.zip}"/>

    <zip zipfile="${target.release.dir}/${release.buildable.zip}">
      <zipfileset dir="..">
        <selector refid="project.source.zip.includes"/>
        <exclude name="**/*.iml"/>
        <exclude name="**/*.ipr"/>
        <exclude name="**/*.iws"/>
        <exclude name="**/*.classpath"/>
        <exclude name="**/*.springBeans"/>
        <exclude name="**/*.project"/>
        <exclude name="**/*.tmproj"/>
        <exclude name="**/.metadata"/>                
        <exclude name="**/.metadata/**/*"/>                
        <exclude name="**/exploded/**"/>
        <exclude name="**/exploded"/>
        <exclude name="**/core/docs"/>
        <exclude name="**/core/docs/**"/>
        <exclude name="**/core-tiger"/>
        <exclude name="**/core-tiger/**/*"/>
        <exclude name="**/sandbox"/>
        <exclude name="**/sandbox/**/*"/>
      </zipfileset>
	  <zipfileset dir="../spring-ws/core/target/javadocs" prefix="doc/api/core"/>
	  <zipfileset dir="../spring-ws/oxm/target/javadocs" prefix="doc/api/oxm"/>
    </zip>
  </target>

  <target name="cvs-update">
	<cvs dest="${basedir}" command="update"/>
	<cvs dest="${basedir}/../spring-oxm" command="update"/>
	<cvs dest="${basedir}/../spring-ws-core" command="update"/>
	<cvs dest="${basedir}/../common-build" command="update"/>
	<cvs dest="${basedir}/../spring-ws-samples" command="update"/>  
  </target>
</project>