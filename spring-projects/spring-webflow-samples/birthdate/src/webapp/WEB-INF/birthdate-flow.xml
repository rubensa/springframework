<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE webflow PUBLIC "-//SPRING//DTD WEBFLOW//EN"
	"http://www.springframework.org/dtd/spring-webflow.dtd">
	
<!-- 
	This simple flow demonstrates the use of the FormAction: a multi-action
	that allows you to mimic the exact behaviour of the SimpleFormController in a flow.
	Notice how all the actions use the same "birthDateFormAction" bean, which groups
	all actions executed by this flow in single class!
	
	Note that this flow implements the exact flow of the SimpleFormController as an example.
	If you only need this flow, it is advised that you just use the SimpleFormController.
-->
<webflow id="birthdate" start-state="setupForm">

	<!--
		Prepare to display a new form. This is very similar to the showNewForm() method
		of the SimpleFormController: it basically initializes the binder so that all property
		editors are available for form display.
	-->
	<action-state id="setupForm">
		<action bean="formAction"/>
		<transition on="success" to="enterBirthdate"/>
	</action-state>
	
	<!--
		Display the input form view.
	-->
	<view-state id="enterBirthdate" view="enterBirthdate">
		<transition on="submit" to="bindAndValidate"/>
	</view-state>
	
	<!--
		Bind and validate input data from the form. This is similar to the bindAndValidate()
		method of the SimpleFormController.
	-->
	<action-state id="bindAndValidate">
		<action bean="formAction"/>
		<transition on="success" to="calculateAge"/>
		<transition on="error" to="enterBirthdate"/>
	</action-state>
	
	<!--
		Process a successful submit. This is similar to the onSubmit() method of the
		SimpleFormController.
	-->
	<action-state id="calculateAge">
		<action bean="formAction"/>
		<transition on="success" to="displayAge"/>
	</action-state>
	
	<!--
		Display the success view.
	-->
	<end-state id="displayAge" view="yourAge"/>

	<bean id="formAction" class="org.springframework.webflow.samples.birthdate.BirthDateFormAction"/>

</webflow>