<?xml version="1.0" encoding="UTF-8"?>
<chapter id="flow-executor">
	<title>Flow executors</title>
	<sect1 id="executor-intro">
		<title>Introduction</title>
		<para>
			Flow executors are facades that act as the highest-level entry points into
			the Spring Web Flow system, responsible for driving the execution of flows in a variety of environments.
		</para>
		<para>
			In this chapter you'll learn how to execute flows within Spring MVC, Struts, 
			and Java Server Faces (JSF) based applications.
		</para>
    </sect1>
    <sect1 id="executor">
    	<title>FlowExecutor</title>
    	<para>
    		<literal>org.springframework.webflow.FlowExecutor</literal> is the 
    		central facade interface external systems use to drive the execution of flows.
    		This facade acts as a convenient entry-point into the Spring Web Flow system.
    	</para>
    	<para>
    		The default implementation is <literal>org.springframework.webflow.FlowExecutorImpl</literal>.
    		It allows for configuration of a flow registry that exposes the flow definitions 
    		eligible for execution, as well as configuration of the flow execution repository strategy 
    		to use.
    	</para>
    	<sect2 id="executor-simple">
    		<title>A typical flow executor configuration</title>
	    	<programlisting>
    &lt;bean id="flowExecutor" class="org.springframework.webflow.executor.FlowExecutorImpl"&gt;
        &lt;constructor-arg ref="flowRegistry"/&gt;
    &lt;/bean&gt;
		
    &lt;bean id="flowRegistry" class="org.springframework.webflow.registry.XmlFlowRegistryFactoryBean"&gt;
        &lt;property name="flowLocations" value="/WEB-INF/flows/**/*-flow.xml"/&gt;
    &lt;/bean&gt;
	    	</programlisting>
    	</sect2>
    	<para>
    		This instructs Spring to create a flow executor that can execute all XML-based flow definitions 
    		contained within the <literal>/WEB-INF/flows</literal> directory.
    	</para>	
    	<sect2 id="executor-custom-repo">
    		<title>A flow executor with a custom repository factory</title>
	    	<programlisting>
    &lt;bean id="flowExecutor" class="org.springframework.webflow.executor.FlowExecutorImpl"&gt;
        &lt;constructor-arg ref="repositoryFactory"/&gt;
    &lt;/bean&gt;

    &lt;bean id="repositoryFactory" class="org.springframework.webflow.execution.repository.continuation.ContinuationFlowExecutionRepositoryFactory"&gt;
        &lt;constructor-arg ref="flowRegistry"/&gt;
    &lt;/bean&gt;
				
    &lt;bean id="flowRegistry" class="org.springframework.webflow.registry.XmlFlowRegistryFactoryBean"&gt;
        &lt;property name="flowLocations" value="/WEB-INF/flows/**/*-flow.xml"/&gt;
    &lt;/bean&gt;
	    	</programlisting>
    	</sect2>		
    	<para>
    		This executor is configured with a continuation-based repository factory, which accesses 
    		stateful continuation repositories managed in the user session.
    	</para>	
    </sect1>
	<sect1 id="executor-mvc">
		<title>Spring MVC integration</title>
		<para>
			Spring Web Flow integrates with both Servlet and Portlet MVC which ship with the 
			core Spring Framework.  Portlet MVC requires Spring 2.0.
		</para>
		<para>
			A Controller implementation acts as an adapter between Spring MVC and Spring Web Flow.
			For both Servlet and Portlet MVC, this controller delegates to a flow executor
			for driving the execution of flows.  One controller typically executes all flows
			of an application, relying on runtime parameterization to determine what flow
			to launch or what flow execution to resume.
		</para>
    	<sect2 id="executor-mvc-simple">
    		<title>A single flow controller executing all flows</title>
	    	<programlisting>
    &lt;bean name="/flowController.htm" class="org.springframework.webflow.executor.mvc.FlowController"&gt;
        &lt;constructor-arg ref="flowExecutor"/&gt;
    &lt;/bean&gt;
	    	</programlisting>
    	</sect2>
   		<para>
			The next several examples illustrate strategies for parameterizing flow controllers 
			from the browser to launch and resume flow executions:
   		</para>
    	<sect2 id="executor-mvc-launch-get">
    		<title>Launching a flow execution - parameter-style anchor</title>
	    	<programlisting>
	&lt;a href="flowController.htm?_flowId=myflow"/&gt;
	    	</programlisting>
    	</sect2>
    	<sect2 id="executor-mvc-launch-get-rest">
    		<title>Launching a flow execution - REST-style anchor</title>
	    	<programlisting>
	&lt;a href="flowController/myflow"/&gt;
	    	</programlisting>
    	</sect2>
    	<sect2 id="executor-mvc-launch-post">
    		<title>Launching a flow execution - form</title>
	    	<programlisting>
    &lt;form action="flowController.htm" method="post"&gt;
        &lt;input type="submit" value="Go"/>
        &lt;input type="hidden" name="_flowId" value="myflow"&gt;
    &lt;/form&gt;
	    	</programlisting>
    	</sect2>
    	<sect2 id="executor-mvc-resume-anchor">
    		<title>Resuming a flow execution - anchor</title>
	    	<programlisting>
	&lt;a href="flowController.htm?_flowExecutionId=${flowExecutionId}&amp;eventId=submit"/&gt;
	    	</programlisting>
    	</sect2>
    	<sect2 id="executor-mvc-resume-form">
    		<title>Resuming a flow execution - form</title>
	    	<programlisting>
    &lt;form action="flowController.htm" method="post"&gt;
        ...
        &lt;input type="hidden" name="_flowExecutionId" value="${flowExecutionId}"&gt;
        &lt;input type="hidden" name="_eventId" value="submit"/>
        &lt;input type="submit" class="button" value="Submit"&gt;
    &lt;/form&gt;
	    	</programlisting>
    	</sect2>
    	<sect2 id="executor-mvc-resume-form-buttons">
    		<title>Resuming a flow execution - multiple form buttons</title>
	    	<programlisting>
    &lt;form action="flowController.htm" method="post"&gt;
        ...
        &lt;input type="hidden" name="_flowExecutionId" value="${flowExecutionId}"&gt;
        &lt;input type="submit" class="button" name="_eventId_submit" value="Submit"&gt;
        &lt;input type="submit" class="button" name="_eventId_cancel" value="Cancel"&gt;
    &lt;/form&gt;
	    	</programlisting>
    	</sect2>
	</sect1>	
	<sect1 id="executor-struts">
		<title>Struts integration</title>
		<para>
			Spring Web Flow integrates with Struts 1.x or >.  The integration is very similiar to 
			Spring MVC, where a single front controller (FlowAction) drives the execution of all flows
			for the application, delegating to a configured flow executor.
		</para>
    	<sect2 id="executor-struts-simple">
    		<title>A single flow action executing all flows</title>
	    	<programlisting>
    &lt;form-beans&gt;
        &lt;form-bean name="actionForm" type="org.springframework.web.struts.SpringBindingActionForm"/&gt;
    &lt;/form-beans&gt;
	    	
    &lt;action-mappings&gt;
        &lt;action path="/flowAction" name="actionForm" scope="request" type="org.springframework.webflow.executor.struts.FlowAction"/&gt;
    &lt;/action-mappings&gt;
	    	</programlisting>
    	</sect2>		
    </sect1>
	<sect1 id="executor-jsf">
		<title>Java Server Faces (JSF) integration</title>
		<para>
			Spring Web Flow integrates with JSF.  The JSF integration relies on custom implementations of 
			core JSF artifacts such as navigation handler and phase listener to drive the 
			execution of flows.
		</para>
    	<sect2 id="executor-jsf-simple">
    		<title>A typical faces-config.xml file</title>
	    	<programlisting>
&lt;faces-config&gt;
    &lt;application&gt;
        &lt;navigation-handler&gt;
            org.springframework.webflow.executor.jsf.FlowNavigationHandler
        &lt;/navigation-handler&gt;
        &lt;property-resolver&gt;
            org.springframework.webflow.executor.jsf.FlowPropertyResolver
        &lt;/property-resolver&gt;
        &lt;variable-resolver&gt;
            org.springframework.webflow.executor.jsf.FlowVariableResolver
        &lt;/variable-resolver&gt;
        &lt;variable-resolver&gt;
            org.springframework.web.jsf.DelegatingVariableResolver
        &lt;/variable-resolver&gt;
        &lt;variable-resolver>
            org.springframework.web.jsf.WebApplicationContextVariableResolver
        &lt;/variable-resolver&gt;
    &lt;/application&gt;

    &lt;lifecycle&gt;
        &lt;phase-listener&gt;org.springframework.webflow.executor.jsf.FlowPhaseListener&lt;/phase-listener&gt;
    &lt;/lifecycle&gt;
&lt;/faces-config&gt;
	    	</programlisting>
    	</sect2>
    	<sect2 id="executor-jsf-launch-get">
    		<title>Launching a flow execution - command link</title>
	    	<programlisting>
    &lt;:commandLink value="Go" action="flowId:myflow"/&gt;
	    	</programlisting>
    	</sect2>
    	<sect2 id="executor-jsf-resume-form">
    		<title>Resuming a flow execution - form</title>
	    	<programlisting>
    &lt;h:form id="form"&gt;
        ...
        &lt;input type="hidden" name="_flowExecutionId" value="${flowExecutionId}"&gt;
        &lt;h:commandButton type="submit" value="Next" action="submit" immediate="false"&gt;
    &lt;/form&gt;
	    	</programlisting>
    	</sect2>
    </sect1>
    <sect1 id="samples">
    	<title>Sample applictions</title>
    	<para>
			It is recommended that you review the Spring Web Flow sample applications included in the 
			release distribution for best-practice illustrations of the features of this framework.
			A description of each sample is provided below:
    	</para>
    	<para>
    		<orderedlist>
    			<listitem>
    				<para>Phonebook - the central sample demonstrating most features (including subflows).</para>
    			</listitem>
    			<listitem>
    				<para>Sellitem - demonstrates a wizard with conditional transitions, conversational scope, and continuations.</para>
    			</listitem>
    			<listitem>
    				<para>Flowlauncher - demonstrates all the possible ways to launch and resume flows.</para>
    			</listitem>
    			<listitem>
    				<para>Itemlist - demonstrates REST-style URLs, conversational redirects, and inline flows.</para>
    			</listitem>
    			<listitem>
    				<para>Shippingrate - demonstrates Spring Web Flow together with Ajax technology.</para>
    			</listitem>
    			<listitem>
    				<para>Birthdate - demonstrates Struts integration and the MultiAction.</para>
    			</listitem>
    			<listitem>
    				<para>Fileupload - demonstrates multipart file upload.</para>
    			</listitem>
    			<listitem>
    				<para>Phonebook-Portlet - the phonebook sample in a Portlet environment (notice how the flow definitions do not change)</para>
    			</listitem>
    			<listitem>
    				<para>Sellitem-JSF - the sellitem sample in a JSF environment (notice how the flow definition does not change)</para>
    			</listitem>
    		</orderedlist>
    	</para>
    </sect1>
</chapter>