<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN//EN" "http://www.springframework.org/dtd/spring-beans.dtd">

<!--
  - Service layer ApplicationContext definition for ejbtest project. Defines beans belonging
  - to service layer. This context will normally be shared by all EJBs, and will be made the
  - parent of the web-app's ApplicationContext, in a demand-load fashion.
 -->
	
<beans>

	<!-- ========================= GENERAL DEFINITIONS ========================= -->

	<!-- Configurer that replaces ${...} placeholders with values from a properties file -->
	<!-- (in this case, JDBC-related settings for the dataSource definition below) -->
	<bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location"><value>/WEB-INF/jdbc.properties</value></property>
	</bean>

	<!-- ========================= RESOURCE DEFINITIONS ========================= -->
  
	<!-- Local DataSource that works in any environment -->
	<!--
	<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName"><value>${jdbc.driverClassName}</value></property>
		<property name="url"><value>${jdbc.url}</value></property>
		<property name="username"><value>${jdbc.username}</value></property>
		<property name="password"><value>${jdbc.password}</value></property>
	</bean>
	-->

	<!-- JNDI DataSource for J2EE environments -->
	<bean id="dataSource" class="org.springframework.jndi.JndiObjectFactoryBean">
		<property name="jndiName"><value>java:DefaultDS</value></property>
	</bean>

	<!-- Hibernate SessionFactory -->
	<bean id="sessionFactory" class="org.springframework.orm.hibernate.LocalSessionFactoryBean">
		<property name="dataSource"><ref local="dataSource"/></property>
		<property name="mappingResources">
			<value>ejbtest.hbm.xml</value>
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">${hibernate.dialect}</prop>
				<prop key="hibernate.transaction.manager_lookup_class">net.sf.hibernate.transaction.JBossTransactionManagerLookup</prop>
			</props>
		</property>
	</bean>

	<!-- Transaction manager that delegates to JTA (for a transactional JNDI DataSource) -->
	<bean id="transactionManager" class="org.springframework.transaction.jta.JtaTransactionManager"/>

	<!-- ========================= BUSINESS OBJECT DEFINITIONS ========================= -->
  
  <!-- pojo SimpleService bean, and tx wrapped proxy which is actually used by clients -->
	<bean id="simpleServiceTarget" class="org.springframework.autobuilds.ejbtest.simple.SimpleServiceImpl">
	</bean>
  <bean id="simpleService" 
        class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
    <property name="transactionManager"><ref bean="transactionManager"/></property>
    <property name="target"><ref bean="simpleServiceTarget"/></property>
    <property name="transactionAttributes">
      <props>
        <prop key="*">PROPAGATION_REQUIRED,readOnly</prop>
      </props>
    </property>
  </bean>  

	<!-- a proxy to remote EJB, with the cached home flag oon, to test home caching -->
	<bean id="cachedHomeProxy" lazy-init="true" class="org.springframework.ejb.access.SimpleRemoteStatelessSessionProxyFactoryBean">
		<property name="jndiName">
			<value>Simple</value>
		</property>
		<property name="cacheHome">
			<value>true</value>
		</property>
		<property name="businessInterface">
			<value>org.springframework.autobuilds.ejbtest.simple.SimpleService</value>
		</property>
	</bean>

	<!-- now another instance with the cached home flag off, to test home lookup every time -->  
	<bean id="noCachedHomeProxy" lazy-init="true" class="org.springframework.ejb.access.SimpleRemoteStatelessSessionProxyFactoryBean">
		<property name="jndiName">
			<value>Simple</value>
		</property>
		<property name="cacheHome">
			<value>false</value>
		</property>
		<property name="businessInterface">
			<value>org.springframework.autobuilds.ejbtest.simple.SimpleService</value>
		</property>
	</bean>
  
	<!-- now a local EJB (with cache on, although that is not the purpose of the test which uses this -->
	<bean id="simpleEjbLocalProxy" lazy-init="true" class="org.springframework.ejb.access.LocalStatelessSessionProxyFactoryBean">
		<property name="jndiName">
			<value>local/Simple</value>
		</property>
		<property name="cacheHome">
			<value>false</value>
		</property>
		<property name="businessInterface">
			<value>org.springframework.autobuilds.ejbtest.simple.SimpleService</value>
		</property>
	</bean>

	<!-- stateless session bean proxy for test of proper Hibernate Session binding and unbinding, when
       no spring TX is used at the same time, but only CMT transaction (accessed via JTA)  -->
	<bean id="cmtJtaNoSpringTx" lazy-init="true" class="org.springframework.ejb.access.SimpleRemoteStatelessSessionProxyFactoryBean">
		<property name="jndiName">
			<value>CmtJtaNoSpringTx</value>
		</property>
		<property name="businessInterface">
			<value>org.springframework.autobuilds.ejbtest.hibernate.tx.ejb.CmtJtaNoSpringTx</value>
		</property>
	</bean>

</beans>
