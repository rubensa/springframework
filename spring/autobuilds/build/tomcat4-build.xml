<?xml version="1.0"?>

<!--
	autobuilds-tomcat4 project build file
	
	Targets to compile and build the sample apps and test server
	environments and run various HttpUnit tests against them.
	
	$Id$
-->
<project name="autobuilds-tomcat4" basedir="." default="usage">

	
	<property name="appserver.distname" value="jakarta-tomcat-${tomcat4.version}" />
	<property name="deploy.dir" value="webapps" />
	
	

	<path id="server-classpath">
		<fileset dir="${servers.install.dir}/${appserver.distname}/server/lib">
			<include name="**/*.jar" />
		</fileset>
		<fileset dir="${servers.install.dir}/${appserver.distname}/common/lib">
			<include name="**/*.jar" />
		</fileset>
		<pathelement location="${servers.install.dir}/${appserver.distname}/bin/bootstrap.jar" />
	</path>
	


	<!--
		usage
	-->
	<target name="usage">        
        <echo>
Spring Framework
=============================================================================

${ant.file} 

This file should not be called directly.  See the documentation in the
autobuilds directory for information.
=============================================================================
        </echo>

	</target>
	
	
	<!--
		extract-server
		
		extract server to installs area and configure from
		local config files
	-->
	<target name="extract-server">
		<untar 
			compression="gzip" 
			src="${tarballs.dir}/${tomcat4.tarball}"
			dest="${servers.install.dir}" />
			
		<copy todir="${servers.install.dir}/${appserver.distname}" overwrite="true">
			<fileset dir="${servers.conf.dir}/${target.server}">
				<include name="**/*" />
			</fileset>
		</copy>
	</target>
	
	
	<!--
		deploy
		
		based on a system or other property (often set in the batch file / shell script
		calling this target) deploy to the target server
	-->
	<target name="deploy" depends="extract-server">
		<copy todir="${servers.install.dir}/${appserver.distname}/${deploy.dir}">
			<fileset dir="${spring.root.dir}/samples/${target.app}/dist">
				<include name="*" />
				<exclude name="**/autobuild*" />
			</fileset>
		</copy>
		<mkdir dir="${servers.install.dir}/${appserver.distname}/${deploy.dir}/${target.app}"/>
		<unwar src="${servers.install.dir}/${appserver.distname}/${deploy.dir}/${target.app}.war"
			   dest="${servers.install.dir}/${appserver.distname}/${deploy.dir}/${target.app}" />
	</target>
	
	
	<!--
		start-server
		
		start the tomcat server if it's a current target appserver
	-->
	<target name="start-server">
		<echo message="##  ----------------------------------------------------------------" />
		<echo message="##  Starting server ${target.server}" />
		<echo message="##  ----------------------------------------------------------------" />
		<java 
			classname="org.apache.catalina.startup.Bootstrap"
			output="${reports.dir}/tomcat4_server.log"
			fork="true">
		
			<arg value="start"/>

    	  	<jvmarg value="-Dcatalina.base=${servers.install.dir}/${appserver.distname}" />
    	  	<jvmarg value="-Dcatalina.home=${servers.install.dir}/${appserver.distname}" />
      		<jvmarg value="-Djava.io.tmpdir=${servers.install.dir}/${appserver.distname}/temp" />
      		
      		<classpath refid="server-classpath" />
      		
      	</java>
	</target>
	
	
	<!--
		stop-server
		
		stop the target server
	-->
	<target name="stop-server">
		<echo message="##  ----------------------------------------------------------------" />
		<echo message="##  Stopping server ${target.server}" />
		<echo message="##  ----------------------------------------------------------------" />
		<java 
			classname="org.apache.catalina.startup.Bootstrap"
			output="${reports.dir}/tomcat4_server.log"
			fork="true">
		
			<arg value="stop"/>
			
    	  	<jvmarg value="-Dcatalina.base=${servers.install.dir}/${appserver.distname}" />
    	  	<jvmarg value="-Dcatalina.home=${servers.install.dir}/${appserver.distname}" />
      		<jvmarg value="-Djava.io.tmpdir=${servers.install.dir}/${appserver.distname}/temp" />
      		
      		<classpath refid="server-classpath" />
      		
      	</java>
	</target>
	
</project>
