<!--
	Resin server config for Spring autobuild testing

	$Id$
 -->

<caucho.com>

<!--
   - Resin logging.  Debugging is also available with different values
   - for id.
  -->
<log id='/log' href='stderr:' timestamp='[%Y-%m-%d %H:%M:%S.%s]'/>

<!-- Security providers.  Adding JSSE looks like:
   - <security-provider id='com.sun.net.ssl.internal.ssl.Provider'/>
  -->

<!--
   - You can change the compiler to "javac" or jikes.
   - The default is "internal" only because it's the most
   - likely to be available.
  -->
<java compiler="internal" compiler-args=""/>

<!--
   - Use precompiled JSP classes if available.
   - 'static-encoding' - optimization if you stick to one character set
  -->
<jsp precompile='true' static-encoding='true' recompile-on-error='true'/>


<!--
   - petclinic datasource
  -->
<resource-ref>
  <res-ref-name>jdbc/petclinicHSQL</res-ref-name>
  <res-type>javax.sql.DataSource</res-type>
  <init-param driver-name="org.hsqldb.jdbcDriver"/>
  <init-param url="jdbc:hsqldb:hsql://localhost:9001"/>
  <init-param username="sa"/>
  <init-param password=""/>
  <init-param maxActive="50"/>
  <init-param maxIdle="10"/>
</resource-ref>


<http-server>
  <!--
     - The root file directory of the server.  Apache users will change
     - this to /usr/local/apache/htdocs and IIS users will change it
     - to d:\inetpub\wwwroot
    -->
  <doc-dir>doc</doc-dir>

  <!-- the http port -->
  <http port='13084'/>

  <!--
     - The srun port, read by both JVM and plugin
     - 127.0.0.1 is the localhost
    -->
  <srun host='127.0.0.1' port='6802'/>

  <class-update-interval>240s</class-update-interval>

  <!--
     - If true, the classloader order follows the Servlet spec.
     - If false, the classloader order follows the JDK spec.
    -->
  <servlet-classloader-hack>false</servlet-classloader-hack>

  <!--
     - Select an error page to display when the connection fails.
     -
     - <error-page exception='connection' location='/my-error-page.html'/>
    -->

  <!-- To disable /caucho-status, set this to false -->
  <caucho-status>true</caucho-status>

  <!-- maximum number of threads -->
  <thread-max>150</thread-max>

  <!--
     - How many threads to wait for keepalives.  Should be at least the
     - number of Apache processes to get good performance.
    -->
  <thread-keepalive id='100'/>

  <!--
     - How long an idle keepalive connection should listen to the socket.
     -
     - The choice of 65 seconds is to avoid the IE SSL timeout problem.
     - If you're not using SSL, you can make this shorter.
    -->
  <request-timeout id='65s'/>

  <!--
     - How many sockets to hold in the buffer before failing requests.
    -->
  <accept-buffer-size id='256'/>
  <!--
     - Maximum number of request threads which will wait for a socket.
    -->
  <thread-min id='5'/>

  <!--
     - Enables/disables exceptions when the browser closes a connection.
    -->
  <ignore-client-disconnect>true</ignore-client-disconnect>

  <!--
     - Enable internal caching.
     - 'dir' is the directory containing the cache
     - 'size' is the memory size in kb
     - 'entries' is the total number of entries
    -->
  <cache dir='cache' size='1024' entries='8192'/>

  <!--
     - Expires time for a cacheable file.  Production sites will
     - normally change this to '15m'
    -->
  <cache-mapping url-pattern='/' expires='15m'/>

  <!--
     - servlet configuration outside the <host> is a default for all hosts.
    -->
  <servlet-mapping url-pattern='*.xtp' servlet-name='xtp'/>
  <servlet-mapping url-pattern='*.jsp' servlet-name='jsp'/>


  <!-- default host if no other host matches -->
  <host id=''>
    <!--
       - The standalone server should uncomment for access logging.
       - With another web server, like Apache, the web server will
       - log this information.
      -->
    <access-log id='logs/access.log' 
          format='%h %l %u %t "%r" %s %b "%{Referer}i" "%{User-Agent}i"'
          rollover-period='1W'/>

    <error-log id='logs/error.log'/>

    <!--
       - Specifies an automatically-expanding .war dir.  Any foo.war
       - file will be expanded to a /foo application.
      -->
    <war-dir id='webapps'/>

  </host>
</http-server>
</caucho.com>
