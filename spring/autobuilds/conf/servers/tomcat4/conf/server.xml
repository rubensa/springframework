<!--
	Tomcat server config for Spring autobuild testing
	
	$Id$
 -->

<Server port="13005" shutdown="SHUTDOWN" debug="0">

  <!-- Global JNDI resources -->
  <GlobalNamingResources>

    <!-- Editable user database that can also be used by
         UserDatabaseRealm to authenticate users -->
    <Resource 
    	name="UserDatabase" 
    	auth="Container" 
    	type="org.apache.catalina.UserDatabase" 
    	description="User database that can be updated and saved"/>
    	
    <ResourceParams name="UserDatabase">
      <parameter>
        <name>factory</name>
        <value>org.apache.catalina.users.MemoryUserDatabaseFactory</value>
      </parameter>
      <parameter>
        <name>pathname</name>
        <value>conf/tomcat-users.xml</value>
      </parameter>
    </ResourceParams>

  </GlobalNamingResources>

  <!-- Define the Tomcat Stand-Alone Service -->
  <Service name="Tomcat-Standalone">

    <!-- Define a non-SSL Coyote HTTP/1.1 Connector on port 13084 -->
    <Connector 
    	className="org.apache.coyote.tomcat4.CoyoteConnector" 
    	port="13084" 
    	minProcessors="5" 
    	maxProcessors="75" 
    	enableLookups="true" 
    	redirectPort="13443" 
    	acceptCount="100" 
    	debug="0" 
    	connectionTimeout="12000" 
    	useURIValidationHack="false" 
    	disableUploadTimeout="true"/>
    

    <!-- Define a Coyote/JK2 AJP 1.3 Connector on port 13009 -->
    <Connector 
    	className="org.apache.coyote.tomcat4.CoyoteConnector" 
    	port="13009" 
    	minProcessors="5" 
    	maxProcessors="75" 
    	enableLookups="true" 
    	redirectPort="13443" 
    	acceptCount="10" 
    	debug="0" 
    	connectionTimeout="0" 
    	useURIValidationHack="false" 
    	protocolHandlerClassName="org.apache.jk.server.JkCoyoteHandler"/>

    
         
    <!-- Define the top level container in our container hierarchy -->
    <Engine 
    	name="Standalone" 
    	defaultHost="localhost" 
    	debug="0">


      <!-- Define the default virtual host -->
      <Host 
      	name="localhost" 
      	debug="0" 
      	appBase="webapps" 
      	unpackWARs="true" 
      	autoDeploy="true">

        <!-- Logger shared by all Contexts related to this virtual host.  By
             default (when using FileLogger), log files are created in the "logs"
             directory relative to $CATALINA_HOME.  If you wish, you can specify
             a different directory with the "directory" attribute.  Specify either a
             relative (to $CATALINA_HOME) or absolute path to the desired
             directory.-->
        <Logger 
        	className="org.apache.catalina.logger.FileLogger" 
        	prefix="default." 
        	suffix=".log" 
        	timestamp="true"/>

        


		<Context
			path="/jpetstore"
			docBase="jpetstore"
			debug="4"
			reloadable="true">

  			<Logger
  				className="org.apache.catalina.logger.FileLogger"
  				directory="../../reports"
        		prefix="jpetstore_tomcat4_app_"
  				suffix=".log"
  				timestamp="true"/>
  		
  		</Context>
  		
  		
		<Context 
			path="/petclinic" 
			docBase="petclinic" 
			debug="4" 
			reloadable="true">
  			
  			<Logger 
  				className="org.apache.catalina.logger.FileLogger" 
  				directory="../../reports" 
        		prefix="petclinic_tomcat4_app_" 
  				suffix=".log" 
  				timestamp="true"/>

			<!-- Define a database connection pool for HSQL -->
  			<!-- NOTE: make sure that a copy of hsqldb.jar is in the TOMCAT common/lib directory -->
  			<!--
  			<Resource 
  				name="jdbc/petclinicHSQL" 
  				auth="Container" 
  				type="javax.sql.DataSource"/>
  			
  			<ResourceParams name="jdbc/petclinicHSQL">
    			<parameter>
      				<name>factory</name>
      				<value>org.apache.commons.dbcp.BasicDataSourceFactory</value>
    			</parameter>

    			<parameter>
      				<name>driverClassName</name>
      				<value>org.hsqldb.jdbcDriver</value>
    			</parameter>
    			<parameter>
      				<name>url</name>
      				<value>jdbc:hsqldb:hsql://localhost:9001</value>
    			</parameter>
    			<parameter>
      				<name>username</name>
      				<value>sa</value>
    			</parameter>

    			<parameter>
      				<name>maxActive</name>
      				<value>50</value>
    			</parameter>
    			<parameter>
      				<name>maxIdle</name>
      				<value>10</value>
    			</parameter>
    			<parameter>
      				<name>maxWait</name>
      				<value>10000</value>
    			</parameter>
    			<parameter>
      				<name>removeAbandoned</name>
      				<value>true</value>
    			</parameter>
    			<parameter>
      				<name>removeAbandonedTimeout</name>
      				<value>60</value>
    			</parameter>
    			<parameter>
      				<name>logAbandoned</name>
      				<value>true</value>
    			</parameter>
  			</ResourceParams>
  			-->

		</Context>

      </Host>

    </Engine>

  </Service>

</Server>
