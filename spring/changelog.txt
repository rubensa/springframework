SPRING FRAMEWORK CHANGELOG
==========================
$Id$


Changes in version 1.0 M3 (25.11.2003)
--------------------------------------

Package org.springframework.aop
* major AOP API changes: see changes-M2-M3.txt for further details
* added "targetClass" argument to StaticMethodPointcut.applies()
* CGLIB proxies support introductions now
* can force CGLIB proxying using new "proxyTargetClass" property on DefaultProxyConfig
* introduced various invoker interceptors like Prototype-, CommonsPooling-, and ThreadLocalInvokerInterceptor

Package org.springframework.beans
* fixed empty-value-on-primitive-property check in BeanWrapperImpl to allow a custom editor to modify the value first
* added support for indexed and mapped properties to BeanWrapperImpl, with "beanName.indexedProperty[index]" syntax
* log value when setting property value in case of simple properties, at debug lebel
* ClassEditor and other framework classes use the thread context class loader now, consistent within the framework
* introduced "containsBean" method in BeanFactory, checking for the existence of a bean without creating it
* BeanFactory's "isSingleton" method now checks singleton status of created object in case of a FactoryBean
* introduced "getBeansOfType" method in ListableBeanFactory, retrieving both normal beans and FactoryBean-created beans
* introduced "getObjectType" method in FactoryBean, to avoid unnecessary bean creation on autowire checks
* reworked BeanFactoryUtils' "beanNamesIncludingAncestors" and "beansOfTypeIncludingAncestors" methods
* added "beanOfTypeIncludingAncestors" method to BeanFactoryUtils, expecting a single matching bean
* introduced FactoryBeanCircularReferenceException and refined circular reference handling with a FactoryBean involved
* introduced BeanNameAware interface to be implemented by beans that want to be aware of their bean factory name
* introduced ConfigurableBeanFactory and ConfigurableListableBeanFactory interfaces in beans.factory.config package
* reworked BeanPostProcessor and BeanFactoryPostProcessor interfaces and moved them to beans.factory.config package
* renamed ListableBeanFactoryImpl to DefaultListableBeanFactory, reflecting its role in the reworked factory hierarchy
* reworked AbstractBeanDefinition/RootBeanDefinition/ChildBeanDefinition, introduced "validate" method
* check for invalid bean definitions: "lazy-init" attribute and FactoryBean classes only allowed for singletons
* fixed RootBeanDefinition bug that caused an unnecessary additional invocation of the constructor of the defined bean
* added support for lazy initialization of singleton beans in AbstractBeanFactory and subclasses
* redefined autowiring to ignore if no matching bean found but still complain in case of more than one matching bean
* ignore specified dependency types on autowiring, like BeanFactory and ApplicationContext
* added ConstructorArgumentValues support to RootBeanDefinition, for resolving arguments to specific beans or values
* added autowire="constructor" mode for PicoContainer-style Type 3 IoC, resolving constructor arguments by type
* made "id" attribute of "bean" tag in XML bean definition format optional, using the first given name as primary name
* allow for "bean" tags with neither "id" nor "name", using the bean class name as implicit id (PicoContainer-style)
* added "lazy-init" attribute to "bean" tag in XML bean definition format, default being "false"
* added "depends-on" attribute to "bean" tag in XML format, expressing initialization dependencies on other beans
* added "constructor-arg" tag to "bean" tag in XML format, analogous to "property" tag, with optional "index" attribute
* added "default-dependency-check" and "default-autowire" attributes to root tag in XML bean definitions
* reworked PropertiesFactoryBean to allow for loaded and local properties and moved into beans.factory.config package
* added CommonsLogFactoryBean to beans.factory.config package, for setting up shared Log instances
* added MethodInvocationFactoryBean to beans.factory.config package, for exposing an object from any static method call

Package org.springframework.context
* split ApplicationContext interface into ApplicationContext client interface and ConfigurableApplicationContext SPI
* ApplicationContextException extends BeansException, to enable consistent catching of exceptions thrown by a context
* ApplicationContextAware and ApplicationObjectSupport throw BeansException now instead of ApplicationContextException
* moved ResourcePropertiesFactoryBean to beans.factory.config package
* added "ignoreResourceNotFound" property to PropertyResourceConfigurer, default is "false" (throwing an exception)
* added support for placeholders in bean reference names to PropertyPlaceholderConfigurer
* added support for cross-referencing placeholders in placeholder values to PropertyPlaceholderConfigurer

Package org.springframework.jdbc
* added setter methods for data access templates and convenience methods for resource opening/closing to JdbcDaoSupport
* refactored JDBC core package so that SQLErrorCodeExceptionTranslator can be subclassed by and passed into JdbcTemplate
* refactored JDBC object package so that one JdbcTemplate can be used to configure multiple RdbmsOperations
* reworked JdbcBeanFactory to extend DefaultListableBeanFactory instead of using a refreshable delegate

Package org.springframework.mail
* added "port" bean property to JavaMailSenderImpl, for setting a non-default mail server port
* added "session" bean property to JavaMailSenderImpl, for setting a custom JavaMail Session (possibly pulled from JNDI)

Package org.springframework.orm
* added setter methods for data access templates to HibernateDaoSupport/JdoDaoSupport
* added convenience methods for resource opening/closing to HibernateDaoSupport/JdoDaoSupport
* reworked HibernateAccessor/HibernateTemplate/HibernateInterceptor flush handling
* throw HibernateObjectRetrievalFailedException on Hibernate's ObjectDeletedException
* added "mappingResourceJars" property to LocalSessionFactoryBean, allowing to load mapping resources from jar files
* added "jdbcExceptionTranslator" property to HibernateTemplate, allowing to set a SQLExceptionTranslator for SQL ex's
* added "jdbcExceptionTranslator" property to HibernateTransactionManager, applied to flushing failures on commit
* added "jdbcExceptionTranslator" parameter to SessionFactoryUtils.getSession, applied to transaction synchronizations
* added "save(entity, id)" convenience method to HibernateTemplate
* introduced JdoAccessor as common base class for JdoTemplate and JdoInterceptor
* introduced JdoDialect interface with getJdbcConnection and flush methods
* added support for JdoDialect in JdoTransactionManager and JdoAccessor/JdoTemplate/JdoInterceptor

Package org.springframework.samples
* switched Countries and Petclinic to auto-detection of spring.tld in META-INF of spring.jar
* switched Countries and Petclinic to ContextLoaderServlet for maximum compatibility
* Tiles Example uses package org.springframework.samples.tiles now
* added warfile.bat, readme.txt, and redirecting index.jsp to Tiles Example

Package org.springframework.transaction
* moved commit exception handling from concrete implementations up to the generic AbstractPlatformTransactionManager
* added "rollbackOnCommitFailure" bean property to AbstractPlatformTransactionManager
* added "cleanupAfterCompletion" template method to AbstractPlatformTransactionManager
* reworked commit exception handling in HibernateTransactionManager and JdoTransactionManager
* reworked cleanup code in DataSourceTransactionManager/HibernateTransactionManager/JdoTransactionManager
* fixed PROPAGATION_SUPPORTS handling in DataSourceTransactionManager/HibernateTransactionManager/JdoTransactionManager
* added "cacheUserTransaction" property to JtaTransactionManager, caching the looked-up UserTransaction by default
* dissolved ThreadObjectManager and put resource binding (for JDBC/JDO/Hibernate) in TransactionSynchronizationManager
* added transaction synchronization support for JDBC and JDO to always return the same resources in a JTA transaction

Package org.springframework.ui
* reworked VelocityEngineFactory to allow VelocityEngineFactoryBean to run outside of application context

Package org.springframework.util
* reworked ClassLoaderUtils' "getResourceAsStream" to load from the class path root with or without leading slash
* "PagedListHolder" and its contained "MutableSortDefinition" implement Serializable now, for distributed sessions
* added convenience methods "previousPage" and "nextPage" to PagedListHolder

Package org.springframework.web
* reworked DataBinder and ServletRequestDataBinder to contain a BindException instead of derive from it
* interfaces HandlerAdapter, HandlerMapping, and ViewResolver do not require ApplicationContextAware anymore
* interface View does not require addStaticAttribute and getName methods anymore
* HandlerAdapter and Controller can throw any Exception now, instead of just ServletException and IOException
* introduced HandlerExceptionResolver interface, for resolution of specific exceptions to error page ModelAndViews
* added SimplerMappingExceptionResolver implementation, for mapping exception class names/messages to view names
* introduced ModelAndViewDefiningException, to be thrown during handler processing to forward to a specific error page
* renamed BaseCommandController's "setBeanName" method to "setCommandName", keeping "setBeanName" deprecated
* renamed BaseCommandController's "userObject" method to "getCommand"
* check both ".x" and ".y" as submit image suffixes in AbstractWizardFormController
* moved FileNameViewController from Tiles Example to package org.springframework.web.servlet.mvc
* view bean factories of XmlViewResolver and ResourceBundleViewResolver are now children of the application context
* added "attributesMap" property to AbstractView, for setting attribute values like bean references via a Map
* renamed InternalResourceView's "exposeModelsAsRequestAttributes" method to "exposeModelAsRequestAttributes"
* if in included request, examine the include paths for handler mappings instead of the original request paths
* if already in included request, perform another include instead of forward in InternalResourceView
* fixed potential NPE in debug log statement of VelocityView
* added taglib URI "http://www.springframework.org/tags" for auto-detection of spring.tld in META-INF of spring.jar


Changes in version 1.0 M2 (23.10.2003)
--------------------------------------
* added optional dependency checking for bean factories, ensuring that all bean properties have been set before use
* added non-default "autowire" functionality so that bean factories can optionally configure dependencies automatically
* added PropertyValuesProviderFactoryBean instead of having getPropertyValues() in the FactoryBean interface
* added BeanPostProcessor interface and support for it in AbstractBeanFactory and AbstractApplicationContext
* moved BeanFactoryPostProcessor from context.support to beans.factory.support package
* reworked AbstractBeanFactory's circular reference detection into eager singleton caching
* redefined XmlBeanFactory "ref" tag: "local" for local bean ids, "bean" for any bean name ("external" deprecated now)
* reworked XmlBeanFactory's alias handling to allow for multiple aliases in the "name" attribute of the bean tag
* allowed nested maps in XML bean definitions, i.e. a "map" tag as child of an "entry" tag of a surrounding "map" tag
* reworked AopUtils and AOP ProxyFactory configuration options
* introduced auto proxy creator classes in org.springframework.aop.framework.support, implementing BeanPostProcessor
* restructured org.springframework.context.support package into support, event, and config packages
* removed "shared object" support in ApplicationContext as part of API simplification
* reworked AbstractXmlApplicationContext's "getInputStreamForBeanFactory" into "loadBeanDefinitions(BeanFactory)"
* added support for multiple file paths in FileSystemXmlApplicationContext and ClassPathXmlApplicationContext
* added support for multiple basenames in a ResourceBundleMessageSource, getting checked sequentially
* introduced MessageSourceAccessor helper class for easy message access, available via ApplicationObjectSupport
* reworked PropertyResourceConfigurer into PropertyOverrideConfigurer and PropertyPlaceholderConfigurer
* introduced generic mail infrastructure in org.springframework.mail package, around the MailSender interface
* introduced JavaMailSender and JavaMailSenderImpl in org.springframework.mail.javamail package
* introduced CosMailSenderImpl in org.springframework.mail.cos, using the MailMessage class from Jason Hunter's COS
* added preInterceptors/postInterceptors support to TransactionProxyFactoryBean
* added support for returning result sets from a stored procedure
* allow HibernateCallback to throw SQLException on direct JDBC access
* refined data access exceptions with new ORM-specific and additional Hibernate-specific subclasses
* reworked Hessian/Burlap/RMI remoting proxies into interceptors with proxy factory bean subclasses
* reworked (Authorizable)RemoteProxyFactoryBean into (Authorizable)RemoteProxySupport
* introduced generic multipart handling aka file upload in org.springframework.web.multipart
* introduced multipart implementation for Jakarta Commons FileUpload
* introduced multipart implementation for Jason Hunter's COS (com.oreilly.servlet)
* added support for multiple file paths in XmlWebApplicationContext's "contextConfigLocation" context-param
* added support for automatic multipart resolution to DispatcherServlet
* fixed context/servlet path detection in WebUtils and AbstractUrlHandlerMapping
* moved LastModified interface to org.springframework.web.servlet.mvc
* reworked DispatcherServlet's revalidation support to leverage HttpServlet.getLastModified
* added "synchronizeOnSession" support to AbstractController, available to all command and form controllers
* renamed AbstractFormController's "processSubmit" method to "processFormSubmission"
* added overloaded "getInitialPage(request,command)" method to AbstractWizardFormController
* added spring:transform tag, providing support for transforming reference data
* refactored Velocity support into generic VelocityEngineFactory and web-specific VelocityConfigurer for views
* Velocity support in web framework uses VelocityEngine now to allow for different Velocity configs in same web app
* fixed TilesView content type handling
* added tiles-example showing how to use Tiles in conjunction with Spring
* added documentation on tags in docs/taglib
* added build scripts and directory structure to webapp-minimal skeleton to allow use as a kickstart for user projects
* combined webapp-typical/hibernate/aop skeletons into one single webapp-typical with multiple context definitions
* introduced alternative Hibernate implementation of Petclinic, now shipping as the default configuration

Changes in version 1.0 M1 (30.8.2003)
-------------------------------------
* changed package structure from com.interface21 to org.springframework
* revised distribution jar files (spring-beans, spring-context, spring-jdbc, spring)
* introduced DisposableBean interface
* introduced "destroy-method" attribute for XML bean definitions
* support for CSV as XML bean "name" to be able to define multiple aliases
* revised bean factory exception messages to include line numbers
* fixed typeMismatch reporting for nested bean properties
* added PropertiesFactoryBean as alternative to properties file loading
* added getValues and toCode methods to Constants utility class
* DynamicMethodPointcut now takes method, args and AttributeRegistry arguments instead of MethodInvocation
* JndiObjectFactoryBean does not prepend container prefix if scheme is given
* fixed Statement and ResultSet handling to work for all kinds of JDBC drivers
* dissolved ReadOnlyResultSet to make JdbcTemplate return the underlying ResultSet
* removed getSql method from PreparedStatementCreator interface
* introduced QueryExecutor interface for retrieval of underlying driver ResultSets
* added CommonsDbcpQueryExecutor implementation for Jakarta Commons DBCP
* revised RdbmsOperation hierarchy to allow for all of JdbcTemplate's options
* SingleConnectionDataSource implements DisposableBean
* SingleConnectionDataSource does not override auto-commit anymore
* renamed XxxExtracter to XxxExtractor and XxxTranslater to XxxTranslator
* support for returning Types.ARRAY from stored procedure
* LocalSessionFactoryBean implements DisposableBean
* added HibernateTemplate.deleteAll for batch deletes
* support for overlapping method name patterns in transaction attribute source definitions
* support for specifying timeouts via TransactionAttributeEditor
* added TransactionProxyFactoryBean for simplified transaction proxies
* removed support for non-transactional execution from AbstractPlatformTransactionManager
* added support for transaction timeouts via JDBC statement timeouts to DataSourceTransactionManager
* added support for transaction timeouts via Hibernate query timeouts to HibernateTransactionManager
* fixed RMI registry detection in RmiServiceExporter
* fixed custom editor usage for rejected field values
* introduced WebApplicationObjectSupport convenience base class
* refined cache control options in WebContentGenerator
* revised initHandler method in AbstractUrlHandlerMapping
* added "urlMap" property to SimpleUrlHandlerMapping
* revised exception behavior of RequestContext and BindErrorsTag
* re-added deprecated ContextLoaderServlet for Servlet 2.2 containers
* refactored Log4jConfigListener into Log4jWebConfigurer and listener
* introduced deprecated Log4jConfigServlet for Servlet 2.2 containers
* introduced Tiles support through TilesView and TilesConfigurer
* introduced support for Spring-aware Tiles component controller
* added customization in AbstractPdfView

Changes in version 0.9.1 (8.8.2003)
-----------------------------------
* revised distribution jar files (spring-beans, spring-jdbc, spring-full)
* fixed error logging in XmlBeanFactory
* support for XML bean definition includes via XML entities
* Spring bean definition DTD allows map entries to be lists now
* introduced "init-method" attribute for XML bean definitions
* new BeanFactoryPostProcessor hook to override bean definition values
* revised PropertyResourceConfigurer based on BeanFactoryPostProcessor
* revised simple JNDI implementation
* support for execution context in SqlQuery hierarchy
* eager initialization of exception translator in JdbcTemplate
* fixed StoredProcedure transaction participation
* moved DataSourceTransactionManager to jdbc.datasource package
* revised JDO LocalPersistenceManagerFactoryBean with bean-defined settings
* revised Hibernate LocalSessionFactoryBean with bean-defined settings
* ability to use Spring-configured DataSource for Hibernate
* support for Hibernate entity interceptors
* fixed Hibernate transaction exception logging
* new HibernateTemplate convenience methods for single-step actions
* new convenience base classes for JDBC/Hibernate/JDO DAOs
* support for read-only transactions
* revised TransactionInterceptor configuration options
* TransactionInterceptor does not have a default strategy anymore
* updated AOP framework to current AOP Alliance interfaces
* optional CGLIB support in the AOP framework (to proxy classes as well as interfaces)
* distinction between static and dynamic method pointcuts
* new regular expression pointcut
* revised EJB support classes with BeanFactory access
* new BindInitializer support in BindUtils
* revised VelocityConfigurer with bean-defined settings
* support for Ant-style path matching in the web framework
* support for JSP expression language in tag implementations
* recommended "spring:" as tag prefix instead of "i21:"
* turned sample "PagedList" into full-fledged "Countries"
* new Petclinic tutorial
* new MVC-step-by-step tutorial
* new article "The Spring Framework - A Lightweight Container"
* new article "Container Resources vs Local Resources"

Changes in version 0.9 (25.6.2003)
----------------------------------
* first public release since the version that came with the book "Expert One-on-One J2EE Design and Development"
* following various unofficial 0.8 CVS snapshots
* general tightening and polishing
* log via Commons Logging
* Log4J configuration support
* revised bean definition XML format with DTD
* support for lists, maps, and props in XML bean definitions
* support for hierarchical bean factories
* support for custom property editors
* various new out-of-the-box editors for dates, numbers, etc
* new FactoryBean interface instead of custom bean definitions
* FactoryBean-based resource definitions for JDBC DataSource etc
* revised simple DataSource implementations
* new JDBC error code exception translater
* new DataFieldMaxValueIncrementer support for JDBC
* new generic transaction management
* new JDO support: resource definition, transaction strategy, template, interceptor
* new Hibernate support: resource definition, transaction strategy, template, interceptor
* new support for remoting via Hessian and Burlap
* new AOP framework aligned with AOP Alliance
* revised EJB access classes based on AOP
* resource access from application contexts
* support for MessageSourceResolvable
* revised validation framework
* support for global validation errors
* revised web framework
* refactored form controller hierarchy
* new handler interception mechanism
* locale and theme resolution
* support for HTML escaping
* revised JSP tag implementations
* new sample application "Petclinic"
* new sample application "PagedList"
* application skeletons as configuration showcases
* MutableSortDefinition accepts now NO_CHANGE for setProperty and does nothing in this case
* (many new convenience classes and methods)
* (too many minor improvements to list)
* (lots of minor bugfixes)
