

suite.class=org.springframework.load.BeanFactoryTestSuite

suite.name=Demo suite

# Will wrap if it's greater than the number of bean
suite.threads=90
suite.passes=1000
suite.reportIntervalSeconds=5
suite.maxPause=5

# todo 

singleton.class=org.springframework.benchmark.invokers.RandomWaitTest
singleton.(singleton)=false
singleton.bean=singleton

prototype.class=org.springframework.benchmark.invokers.RandomWaitTest
prototype.(singleton)=false
prototype.bean=prototype

apartment.class=org.springframework.benchmark.invokers.RandomWaitTest
apartment.(singleton)=false
apartment.bean=apartment

direct.class=org.springframework.benchmark.invokers.RandomWaitTest
direct.(singleton)=false
direct.bean=singletonTarget

pooling.class=org.springframework.benchmark.invokers.RandomWaitTest
pooling.(singleton)=false
pooling.bean=pooling

synch.class=org.springframework.benchmark.invokers.RandomWaitTest
synch.(singleton)=false
synch.bean=synch
#synch.instances=70

synchInc.class=org.springframework.benchmark.invokers.RandomWaitTest
synchInc.(singleton)=false
synchInc.bean=synchInc

# Demonstrates how one thread can override behavior
#test2.class=org.springframework.load.http.HttpTest



# Reporter beans
#xmlReporter.class=org.springframework.load.XmlTestReporter
#xmlReporter.xmlReportFileName=c:\\work\\loadTests.xml