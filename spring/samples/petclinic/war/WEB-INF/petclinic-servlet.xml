<?xml version="1.0" encoding="UTF-8"?>
<!--
	- DispatcherServlet application context for PetClinic's web tier.
-->
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		xmlns:p="http://www.springframework.org/schema/p" xmlns:context="http://www.springframework.org/schema/context"
		xsi:schemaLocation="
			http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
			http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd">

	<!--
		- Message source for this context, loaded from localized "messages_xx" files.
		- Could also reside in the root application context, as it is generic,
		- but is currently just used within PetClinic's web tier.
	-->
	<bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource"
			p:basename="messages"/>


	<!-- ========================= MAPPING DEFINITIONS ========================= -->

	<!--
		- The controllers within this application provide @RequestMapping annotations at the type level.
		- DefaultAnnotationHandlerMapping is driven by those annotations. This behavior is enabled by
		- default with Java 5+.
	-->

	<!--
		- This bean processes annotated handler methods, applying PetClinic-specific PropertyEditors
		- for request parameter binding. It overrides the default AnnotationMethodHandlerAdapter.
	-->
	<bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		<property name="cacheSeconds" value="0"/>
		<property name="webBindingInitializer">
			<bean class="org.springframework.samples.petclinic.web.ClinicBindingInitializer"/>
		</property>
	</bean>

	<!--
		- This bean resolves specific types of exception to corresponding error views.
		- The default behaviour of DispatcherServlet is to propagate all exceptions to the
		- servlet container: This will happen here with all other types of exception.
	-->
	<bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
		<property name="exceptionMappings">
			<props>
				<prop key="org.springframework.dao.DataAccessException">dataAccessFailure</prop>
				<prop key="org.springframework.transaction.TransactionException">dataAccessFailure</prop>
			</props>
		</property>
	</bean>

	<!--
		- This bean provides explicit View mappings in a resource bundle instead of the
		- default InternalResourceViewResolver. It fetches the view mappings from
		- localized "views_xx" classpath files, i.e. "/WEB-INF/classes/views.properties"
		- or "/WEB-INF/classes/views_de.properties".
		-
		- Symbolic view names returned by Controllers will be resolved by this bean
		- using the respective properties file, which defines arbitrary mappings between
		- view names and resources.
	-->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver"
			p:prefix="/WEB-INF/jsp/" p:suffix=".jsp"/>


	<!-- ========================= CONTROLLER DEFINITIONS ========================= -->

	<!--
		- The controllers are autodetected POJOs labeled with the @Controller annotation.
	-->
	<context:component-scan base-package="org.springframework.samples.petclinic.web"/>

</beans>
