<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN//EN" "http://www.springframework.org/dtd/spring-beans.dtd">

<!--
  - Application context definition for Petclinic on JDBC.
	-->
<beans>
	
	<bean id="groovyScriptFactory"
		class="org.springframework.beans.factory.script.groovy.GroovyScriptFactory"
	>
		<property name="expirySeconds"><value>20</value></property>
	</bean>
	 
	<bean id="simpleSingleton"
		factory-bean="groovyScriptFactory"
		factory-method="create"
	>
		<constructor-arg index="0"><value>org/springframework/beans/factory/script/groovy/SimpleHello.groovy</value></constructor-arg>
	</bean>
	
	<bean id="inline"
		factory-bean="groovyScriptFactory"
		factory-method="create"
	>
		<constructor-arg index="0">
			<value>inline:
				class Test implements org.springframework.beans.factory.script.Hello {

				String sayHello() {
					"hello world inline"
				}
			} 
			</value></constructor-arg>
	</bean>
	
	<!--
		Must be a singleton or the DynamicScriptInterceptor
		fails when getting the bean from the factory
	-->
	<bean id="propertySingleton"
		singleton="true"
		factory-bean="groovyScriptFactory"
		factory-method="create"
	>
		<constructor-arg index="0"><value>org/springframework/beans/factory/script/groovy/PropertyHello.groovy</value></constructor-arg>
		
		<!-- Property on created Groovy object -->
		<property name="message"><value>hello world property</value></property>
	</bean>
	
	<bean id="propertyPrototype"
		singleton="false"
		factory-bean="groovyScriptFactory"
		factory-method="create"
	>
		<constructor-arg index="0"><value>org/springframework/beans/factory/script/groovy/PropertyHello.groovy</value></constructor-arg>
		
		<!-- Property on created Groovy object -->
		<property name="message"><value>propertyPrototype</value></property>
	</bean>
	<bean id="twoInterfaces"
		singleton="true"
		factory-bean="groovyScriptFactory"
		factory-method="create"
	>
		<constructor-arg index="0">
			<value>inline:
				class TwoInterfaces implements org.springframework.beans.factory.script.Hello, org.springframework.aop.framework.TimeStamped {

				String sayHello() {
					return "hello world two interfaces"
				}
				
				long getTimeStamp() {
					return 1000
				}
			} 
			</value>
		</constructor-arg>
	</bean>
	
	
	<bean id="scriptDependsOnJava"
		singleton="true"
		factory-bean="groovyScriptFactory"
		factory-method="create"
	>
		<constructor-arg index="0">
			<value>inline:
				class D implements org.springframework.beans.factory.script.Hello {
				
				property delegate

				String sayHello() {
					System.out.println("this is " + this + "; delegate is " + delegate)
					return delegate.sayHello()
				}
			} 
			</value>
		</constructor-arg>
		
		<!-- Property on created Groovy object -->
		<property name="delegate"><ref local="dependsOnProperty"></ref></property>
	</bean>
	
	<bean id="dependsOnProperty" 
		class="org.springframework.beans.factory.script.DelegatingHello">
		<!-- Depends on dynamic hello -->
		<property name="hello"><ref local="propertySingleton"></ref></property>
	</bean>
	
	<bean id="bad"
		factory-bean="groovyScriptFactory"
		factory-method="create"
		singleton="false"
	>
		<constructor-arg index="0"><value>org/springframework/beans/factory/script/groovy/Bad.groovy</value></constructor-arg>
	</bean>

	
</beans>
