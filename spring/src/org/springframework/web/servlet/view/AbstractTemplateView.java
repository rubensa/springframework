/*
 * Copyright 2002-2004 the original author or authors.
 * 
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 *      http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ 

package org.springframework.web.servlet.view;

import java.util.Enumeration;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;

/**
 * AbstractTemplateView provides template based view technologies such as 
 * Velocity and FreeMarker with the ability to use request and session
 * attributes in their model.
 * <p>
 * JSP/JSTL and other view technologies automatically have access to the 
 * HttpServletRequest object and thereby the request/session attributes
 * for the current user.
 * 
 * @author Darren Davison
 * @since May 17, 2004
 * @version $Id$
 */
public abstract class AbstractTemplateView extends AbstractUrlBasedView {

    private boolean exposeRequestAttributes = false;
    private boolean exposeSessionAttributes = false;
    
    
    /**
     * Can be called from the concrete subclass prior to merging template and model
     * data.  Bean properties on the View determine whether request and/or session
     * attributes will be made available to the model.  The default values are
     * false meaning that neither will be exposed.
     *  
     * @param request the current HttpServletRequest for which attributes may be exposed 
     * @param model the model Map generated by the controller that handled the request
     */
    protected void exposeAttributesToModel(HttpServletRequest request, Map model) {       
        if (model == null) {
            logger.info("Model is null, request/session attributes cannot be added to the model");
            return;
        }
        
	    if (exposeRequestAttributes)
	        for (Enumeration enum = request.getAttributeNames(); enum.hasMoreElements();) {
	            String attribute = (String) enum.nextElement();
	            Object attributeValue = request.getAttribute(attribute);
	            if (logger.isDebugEnabled())
	                logger.debug("Exposing request attribute [" + attribute + "] with value [" + attributeValue + "] to model");
	            model.put(attribute, attributeValue);
	        }
	    
	    HttpSession session = request.getSession(false);
        if (exposeSessionAttributes && session != null) 
	        for (Enumeration enum = session.getAttributeNames(); enum.hasMoreElements();) {
	            String attribute = (String) enum.nextElement();
	            Object attributeValue = session.getAttribute(attribute);
	            if (logger.isDebugEnabled())
	                logger.debug("Exposing session attribute [" + attribute + "] with value [" + attributeValue + "] to model");
	            model.put(attribute, attributeValue);
	        }
    }
    
    /**
     * Set this bean property to true to cause all request attributes to be added to the
     * model prior to merging with the template.
     * 
     * @param exposeRequestAttributes - set to true if request attributes should be 
     * visible to the template.  False by default
     */
    public void setExposeRequestAttributes(boolean exposeRequestAttributes) {
        this.exposeRequestAttributes = exposeRequestAttributes;
    }
    
    /**
     * Set this bean property to true to cause all HttpSession attributes to be added to the
     * model prior to merging with the template.
     * 
     * @param exposeSessionAttributes - set to true if session attributes should be 
     * visible to the template.  False by default
     */
    public void setExposeSessionAttributes(boolean exposeSessionAttributes) {
        this.exposeSessionAttributes = exposeSessionAttributes;
    }
}
