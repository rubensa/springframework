#**
 * spring.vm
 *
 * This file consists of a collection of Velocity macros aimed at easing
 * some of the common requirements of web applications - in particular 
 * handling of forms.
 *
 * Spring's Velocity support will automatically make this file and therefore
 * all macros within it available to any application using Spring's 
 * VelocityConfigurer.
 *
 * To take advantage of these macros, a template must be rendered by using
 * Spring's VelocityFormView class (a simple extension of the normal
 * VelocityView) which sets up the render tool used by these macros.
 *
 * @author Darren Davison
 * @author Juergen Hoeller
 * @since 1.1
 *#
 
#**
 * springBind
 * 
 * Sets some well-known context attributes up to correspond to errors
 * and field values based on the parameters received.  Can be called 
 * multiple times within a form to bind to new command objects and or
 * field names.
 *
 * Producing no output, the following context variables will be available
 * each time this macro is referenced:
 *
 *   $status : a BindStatus instance holding the command object name,
 *   expression, value, and error codes and messages for the path supplied
 *
 * @param $path : the path (string value) of the value required to bind to.
 *   Spring defaults to a command name of "command" but this can be overridden
 *   by user config.
 *#
#macro( springBind $path )
	#set ($status = $springMacroRequestContext.createBindStatus($path))
#end

#**
 * springBindEscaped
 *
 * Similar to springBind, but creates an HTML-escaped BindStatus instance.
 *#
#macro( springBindEscaped $path )
	#set ($status = $springMacroRequestContext.createBindStatus($path, true))
#end
