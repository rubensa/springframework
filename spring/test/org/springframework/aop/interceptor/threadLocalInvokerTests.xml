<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE beans PUBLIC  "-//SPRING//DTD BEAN//EN" "http://www.springframework.org/dtd/spring-beans.dtd">

<beans>
	
	
	<bean id="prototypeTest" class="org.springframework.aop.interceptor.SideEffectBean" 
		singleton="false">	
		<property name="count"><value>10</value></property>
	</bean>
	
	<bean id="threadLocalInvokerInterceptor" class="org.springframework.aop.interceptor.ThreadLocalInvokerInterceptor">	
		<property name="targetBeanName"><value>prototypeTest</value></property>
	</bean>
	
	<bean id="debugInterceptor" class="org.springframework.aop.interceptor.DebugInterceptor">
	</bean>
	
	<!--
		We want to invoke the getStatsMixin method on our ThreadLocal invoker
	-->
	<bean id="statsAdvisor" class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
		<property name="target"><ref local="threadLocalInvokerInterceptor" /></property>
		<property name="targetMethod"><value>getStatsMixin</value></property>
	</bean>
	
	<!--
		This will create a bean for each thread ("apartment")
	-->
	<bean id="apartment" 
			class="org.springframework.aop.framework.ProxyFactoryBean"
	>	
		<property name="interceptorNames"><value>debugInterceptor,statsAdvisor,threadLocalInvokerInterceptor</value></property>
		
		<!-- Necessary as have a mixin and want to avoid losing the class,
			 because there's no target interface -->
		<property name="proxyTargetClass"><value>true</value></property>
		
	</bean>

</beans>		
	
	